openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/hanssak/IW-API/1.0.0
info:
  version: "1.0.0"
  title: HS Cloud API
  contact:
    email: hsrnd1@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  description: >
    HS Cloud API은 클라우드 인프라 솔루션에 사용하는 API 규격정의를 나타내는 문서입니다.
    
    >
    
    ## Authentication
    
    이 API는 토큰 인증(HTTP 헤더의 Bearer)을 사용합니다. 먼저 로그인/비밀번호 인증을 사용하여 새 Bearer 토큰을 검색합니다. 그런 다음 이를 사용하여 다른 리소스에 액세스할 수 있습니다.
    
    
    **Bearer token example**
    
    
    `sYFuat5lz1y5v0LrCt7LfqJpo1AkdLgm7LbY6eRibN4NYw9Srf6aMIRJM8KbTwM6`
    
    
    이 문서 전체의 URL 예제에서는 `token`을 Bearer로 HTTP Header에 사용합니다. 이러한 예가 작동하려면 값을 고유한 액세스 토큰으로 대체해야 합니다.
    
    
    
    ## Status codes
    
    This API uses HTTP status codes to communicate with the API consumer.
    
    + `200 OK` - 성공적인 GET, PUT, PATCH 또는 DELETE에 대한 응답
    
    + `201 Created` - 생성을 초래하는 POST에 대한 응답.
    
    + `202 Accepted` - 처리 요청이 수락되었지만 처리가 완료되지 않았습니다.
    
    + `204 No Content` - 본문을 반환하지 않는 성공적인 요청에 대한 응답(예: DELETE 요청).
    
    + `302 Found` - 클라이언트에게 다른 URL을 보도록(찾아보라고) 지시합니다.
    
    + `304 Not Modified` - 응답은 이전 전송 이후 수정되지 않았습니다.
    
    + `400 Bad Request` - 잘못된 요청 본문 유효성 검사 오류를 요청합니다.
    
    + `401 Unauthorized` - 인증 정보가 없거나 유효하지 않은 경우.
    
    + `402 Payment required` -  결제 확인에 실패한 경우
    
    + `403 Forbidden` - 인증에 성공했지만 인증된 사용자가 리소스에 액세스할 수 없는 경우.
    
    + `404 Not Found` - 존재하지 않는 리소스를 요청할 때.
    
    + `405 Method Not Allowed` - 비 허가 된 방식.
    
    + `409 Conflict` - 리소스의 현재 상태와 충돌하여 요청을 완료할 수 없는 경우.
    
    + `422 Unprocessable Entity` - 요청이 잘 구성되었지만 의미 오류로 인해 따를 수 없었습니다.
    
    + `500 Server Error` - API 쪽에서 문제가 발생했습니다.
    
    + `501 Not Implemented` - 서버가 요청 방법을 인식하지 못하거나 요청을 이행하는 능력이 부족합니다.    
    
    
    ## Roles
    
    API 규격은 소스 혼동을 방지하기 위해 일반적인 규칙 요약을 적용하여 설계됩니다.
    
    
    /customers 
    
    - `POST` 새 고객 추가
    
    - `GET` 모든 고객 검색
    
    - `PUT` 고객 대량 업데이트 
    
    - `DELETE` 모든 고객 제거
  
  
    /customers/1
    
    - `POST` Error 
    
    - `GET` 고객 1에 대한 세부정보 검색  
    
    - `PUT` 고객 1이 있는 경우 고객 1의 세부정보 업데이트
    
    - `DELETE` 고객 1 제거
    
    
    /customers/1/orders

    - `POST` 고객 1에 대한 새 주문 만들기
    
    - `GET` 고객 1에 대한 모든 주문 검색
    
    - `PUT` 고객 1의 주문 대량 업데이트
    
    - `DELETE` 고객 1의 모든 주문 제거
    
    
    
    ## Encoding
    
    -
    
    

    
    >
    
    ---
    
    


tags:
  - name: 1. 신청
    description: '회원 가입 신청, 탈퇴, 관리자 승인, 알림등 사용자 이벤트 처리 Cycle'  
  - name: 2. 생성
    description: '(수정중) Cloud SaaS관련: 제품(솔루션), 인프라, 서버, 네트워크 생성 및 구성'
  - name: 3. 인증
    description: '로그인, 인증, 인가, 토큰 발급 (검증)'
  - name: 4. 고객사 관리
    description: '테넌트 생성, 변경, 조회를 위한 고객사 관리'
  - name: 5. 사용자 관리
    description: '관리/서비스 포털의 유저를 관리'
  - name: 5. 운영
    description: '[SA연동] 모니터링, 오토스케일링 상태 관리'
  - name: 6. 과금
    description: '[SA연동] SaaS 미터링, 빌링, 청구서 관리'
  - name: 7. 패치
    description: '[SA연동] 업데이트, 백업, 복구'
  - name: '4.1 관리: 조직관리'
    description: '관리포털에서 사용하는 사용자 조직 관리 (Cloud관리자)'
  - name: '4.2 관리: 사용자 설정'
    description: '서비스포털에서 사용하는 유저 설정: 서비스 관리자 및 서비스포털 이용자) <br> (탈퇴, 정보 업데이트, 프로필 가져오기, 패스워드변경, 레포트, 구독정보)'
  - name: '4.3 관리: 시스템'
    description: '[SA연동] 시스템(Tenent, VM, IW-SA 서비스), Cloud(Network, VM, Storage) 제어 '


paths:
##### 1. 신청
  '/noti/invite':
    post:
      tags:
        - '1. 신청'
      summary: '1.2.3 회원가입 : 사용자 초대 #PostInvite'
      description: '\- 클라우드관리자가 사용자에게 초대장 전송: 관리포털 -> API Gateway -> Speaker <br> 이메일 형태로 전송해야 함'
      operationId: PostInvite
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
          description: '관리자가 초대하는 URL로 인증된 사용자가 해야함'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/noti'
        description: '이메일 초대장으로 type:email을 설정해야합니다.'
      responses:
        '200':
          description: '이메일 초대장 전송 완료'
  '/svc/apply/member/{tenant_id}':
    get:
      tags:
        - "1. 신청"
      summary: '1.2.1 고객사 특정 테넌트 존재 여부 조회 #GetApplyMember'
      description: '\- 특정 테넌트 조회: 외부 API -> API Gateway -> SaaS Manager <br> 조회 기준은 URL {고객사 테넌트ID}기준으로 지칭'
      operationId: GetApplyMember
      parameters: 
        - name: tenant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_tenant_id'    
      responses:
        '200':
          description: '테넌트 존재'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  tenant_id:
                    type: string
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'

  '/svc/apply/member':
    post:
      tags:
        - "1. 신청"
      summary: '1.2.1 고객사 등록: 테넌트 생성 신청 #PostApplyMember' 
      description: '\- 테넌트 생성 신청: 외부 API -> API Gateway -> SaaS Manager <br> required를 필수로 지켜야 합니다. 또한 등록 성공 시 SaaS DB가 생성됩니다.'
      operationId: PostApplyMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_apply_member'
        required: true
      responses:
        '201':
          description: '테넌트 생성 성공'
          content:
            application/json:
              schema: 
                allOf:
                  - $ref: '#/components/schemas/seq'
                  - $ref: '#/components/schemas/member_tenant'
                  - $ref: '#/components/schemas/member_company'
        '400':
          $ref: '#/components/responses/badRequest'
          
  '/svc/apply/saas-admin':
    post:
      tags:
        - "1. 신청"
      summary: '1.2.1 서비스포털 관리자 생성 신청#PostApplySaasAdmin' 
      description: '\- 서비스포털 관리자 생성: 외부 API -> API Gateway -> SaaS Manager <br> 회원가입 진행시 서비스 관리자를 추가할수 있습니다.'
      operationId: PostApplySaasAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_apply_saas_admin'
        required: true
      responses:
        '201':
          description: '관리자 생성 성공'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/seq'
        '400':
          $ref: '#/components/responses/badRequest'


  '/adm/broker/{vendor}/service/vpostgresql/database':
    post:
      tags:
        - "1. 신청"
      summary: "1.2.1 1.2.2 Cloud for PostgreSQL 데이터베이스 생성 신청 #PostBrokerNcpPogresqlDatabase"
      description: "- 내부 서비스간 통신만 허용하는 API입니다. "
      operationId: PostBrokerNcpPogresqlDatabase
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: path
          name: vendor
          required: true
          schema:
            $ref: '#/components/schemas/parameter_vendor'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_ncp_psql_database'
      responses:
        '201':
          description: 'DB 생성 완료'
        '409':
          $ref: '#/components/responses/conflict'


##### 2. 생성
  '/{portal}/order/base-code':
    get:
      tags:
        - "2. 생성"
      summary: '2.1.1 SaaS 신청 (1.상품선택): 상품 기본 코드 정보 조회 #GetOrderBasecode'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 이후 정보 조회시 서비스 사용자에게 정보 제공시 참고할 기본 코드 정보로써 가지고 있어야합니다. '
      operationId: GetOrderBasecode
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '제품 모든 목록'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      base_code:
                        type: array
                        items:
                          $ref: '#/components/schemas/base_code'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
          
  '/{portal}/order/product-list':
    post:
      tags:
        - "2. 생성"
      summary: '2.1.1 SaaS 신청 (1.상품선택): 상품 신청 버튼 클릭 이벤트 #PostOrderProductlist'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 제품 신청 버튼을 클릭할때 호출되는 이벤트로 고객사 정보를 가지고 있어야합니다. '
      operationId: PostOrderProductlist
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'    
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/seq'
              description: '고객사 SEQ 삽입'
      responses:
        '201':
          description: '제품 리스트 생성 후 SEQ 수렴'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/seq'
        '409':
          $ref: '#/components/responses/conflict'
      
  '/{portal}/order/product':
    get:
      tags:
        - "2. 생성"
      summary: '2.1.1 SaaS 신청 (1.상품선택): SaaS상품 전체 목록 조회 #GetOrderProduct'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 상품 및 제품 신청의 초기단계 '
      operationId: GetOrderProduct
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '제품 모든 목록'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      cloud:
                        type: array
                        items:
                          $ref: '#/components/schemas/cloud'
                      product:
                        type: array
                        items:
                          $ref: '#/components/schemas/product'
                      service:
                        type: array
                        items:
                          $ref: '#/components/schemas/service'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags:
       - "2. 생성"
      summary: '2.1.1 SaaS 신청 (1.상품선택): SaaS 제품 주문 이력 등록 #PostOrderProduct'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 제품 선택에 따른 주문이력 정보 등록 order 정보에 삽입 (1단계)'
      operationId: PostOrderProduct
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        cloud_id:
                          type: string
                        product_id:
                          type: string
                        service_id:
                          type: string
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/license':
    get:
      tags:
        - 2. 생성
      summary: '2.1.1 SaaS 신청 (1.상품선택): SaaS상품 라이센스 조회 #GetOrderLicense'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 제품 라이선스 목록 조회 (q 파라미터로 제품 검색 해야합니다.)'
      operationId: GetOrderLicense
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: product-id
          schema:
            type: string
            example: 'q=product-id%3DSG'
          required: true
        - in: query
          name: service-id
          schema:
            type: string
            example: 'q=service-id%3DFILE'
          required: true
      responses:
        '200':
          description: '상품에 따른 라이센스 종류 정보'
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    type: array
                    items: 
                      $ref: '#/components/schemas/license'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags:
        - "2. 생성"
      summary: '2.1.1 SaaS 신청 (1.상품선택): 라이센스 목록 선택 (추가) 이벤트 #PostOrderLicense'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 라이선스 선택 후 다음 버튼을 클릭할때 호출되는 이벤트로 라이센스 선택정보를 주문이력에 추가하는 동작을 합니다. '
      operationId: PostOrderLicense 
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        license: 
                          $ref: '#/components/schemas/license'
      responses:
        '201':
          description: '주문 이력 등록 완료'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/id'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/service/{service_id}/add-service':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (1.상품선택): 부가서비스 정보 조회 #GetOrderAddservice'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 부가 서비스 모듈 정보들을 조회합니다. 부가서비스는 여러 서비스를 신청할 수 있으므로, 복수 선택을 지원해야 합니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderAddservice
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: service_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_service_id'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '서비스 ID에 따른 부가서비스 리스트'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  add_service:
                    type: array
                    items:
                      $ref: '#/components/schemas/add_service'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (1.상품선택): 부가서비스 신청 등록 #PostOrderAddservice'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 부가 서비스 모듈 선택 이벤트입니다. 부가서비스는 여러 서비스를 신청할 수 있으므로, 복수 선택을 지원해야 합니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: PostOrderAddservice
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: service_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_service_id'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        add_service: 
                          type: array
                          items:
                            $ref: '#/components/schemas/add_service'
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '400':
          $ref: '#/components/responses/badRequest'
        '409':
          $ref: '#/components/responses/conflict'
  
  '/{portal}/order/service/{service_id}/add-service/autoscale':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS AutoScale 데이터 조회 #GetOrderScale'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> AutoScale 목록 조회 (q 파라미터로 부가서비스 ID 입력해야합니다.)'
      operationId: GetOrderScale
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: service_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_service_id'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: license-id 
          schema:
            type: string
            example: 'q=license-id%3D{LicenseID}'
          required: true
      responses:
        '200':
          description: 'AutoScale 부가서비스ID에 따른 Scale 정책정보'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  autoscale:
                    type: object
                    properties:
                      group: 
                        type: array
                        items:
                          $ref: '#/components/schemas/autoscale'
                      system:
                        type: array
                        items:
                          type: object
                          properties:
                            system_type: 
                              type: string
                            system:
                              type: array
                              items:
                                $ref: '#/components/schemas/autoscale'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS AutoScale 데이터 등록 #PostOrderScale'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> AutoScale 라이선스 주문 정보 저장 이벤트'
      operationId: PostOrderScale 
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: service_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_service_id'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        autoscale: 
                          type: object 
                          properties:
                            group:
                              type: array
                              items: 
                                type: object
                                properties:
                                  policy_id:
                                    type: string
                                  act_value:
                                    type: integer
                            system:
                              type: array
                              items:
                                type: object
                                properties:
                                  system_type:
                                    type: string
                                  system:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        policy_id:
                                          type: string
                                        act_value:
                                          type: integer
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '400':
          $ref: '#/components/responses/badRequest'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/config':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS 제품 구성 (폼) 데이터 조회 #GetOrderConfig'
      description: '\- 서비스포털 -> API Gateway -> Configurator <-> CloudBroker <br> 서비스에 사전정의된 서비스 구성 정보 조회합니다. 해당 정보들은 실제 서버가 구성될때 사용하는 정보이므로, 필히 입력을 받아야합니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderConfig
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: license-id 
          schema:
            type: string
            example: 'q=license-id%3D{LicenseID}'
          required: true
        - in: query
          name: cloud-id 
          schema:
            type: string
            example: 'q=cloud-id%3D{CloudID}'
          required: true
      responses:
        '200':
          description: '서비스 구성을 위한 모든 폼 데이터 조회'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  config: 
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/form_header'
                        - type: object
                          properties:
                            vpc: 
                              allOf:
                                - $ref: '#/components/schemas/form_header'
                                - $ref: '#/components/schemas/private_network_vpc_get_info'
                                - type: object
                                  properties:
                                    subnet:
                                      allOf:
                                        - $ref: '#/components/schemas/form_header'
                                        - $ref: '#/components/schemas/private_network_subnet_get_info'
                                        - type: object
                                          properties:
                                            server:
                                              allOf:
                                                - $ref: '#/components/schemas/form_header'
                                                - $ref: '#/components/schemas/server_instance_info'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS 제품구성 주문 등록 #PostOrderConfig'
      description: '\- 서비스포털 -> API Gateway -> Configurator  <br> 리소스 구성 정보를 등록하는 폼입니다. 서비스 생성에 중요한 데이터니 API를 유념하시기 바랍니다.(입력 데이터는 주문정보에 저장됩니다.)'
      operationId: PostOrderConfig 
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        config:
                          type: array
                          items:
                            type: object
                            properties:
                              system_type:
                                type: string
                              system:
                                allOf:
                                  - $ref: '#/components/schemas/server_network_info'
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '400':
          $ref: '#/components/responses/badRequest'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/server/os':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS서버 데이터 조회 #GetOrderServerOs'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 서비스에 사전정의된 서버 모듈 정보들을 조회합니다. 해당 정보들은 서버의 실제 코드들도 내포되어 있습니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderServerOs
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: license-id 
          schema:
            type: string
            example: 'q=license-id%3D{LicenseID}'
          required: true
        - in: query
          name: cloud-id 
          schema:
            type: string
            example: 'q=cloud-id%3D{CloudID}'
          required: true
        - in: query
          name: system 
          schema:
            type: string
            example: 'q=system%3D{System구분자}'
          required: true
      responses:
        '200':
          description: 'Server 데이터 정보 모두 조회'
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_os:
                    type: object
                    properties:
                      recommand_cloud_os_id:
                        type: string
                      cloud_os_id:
                        type: array
                        items:
                          $ref: '#/components/schemas/cloud_os'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'

  '/{portal}/order/server/product':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS서버 데이터 조회 #GetOrderServerProduct'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 서비스에 사전정의된 서버 모듈 정보들을 조회합니다. 해당 정보들은 서버의 실제 코드들도 내포되어 있습니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderServerProduct
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: license-id 
          schema:
            type: string
            example: 'q=license-id%3D{LicenseID}'
          required: true
        - in: query
          name: cloud-id 
          schema:
            type: string
            example: 'q=cloud-id%3D{CloudID}'
          required: true
        - in: query
          name: system 
          schema:
            type: string
            example: 'q=system%3D{System구분자}'
          required: true
        - in: query
          name: cloud-os-id 
          schema:
            type: string
            example: 'q=cloud-os-id%3D{CloudOsId}'
          required: true  
      responses:
        '200':
          description: 'Server 데이터 정보 모두 조회'
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_product:
                    type: object
                    properties:
                      recommand_cloud_product_id:
                        type: string
                      min_cloud_product_id:
                        type: string
                      cloud_product:
                        type: array
                        items:
                          $ref: '#/components/schemas/cloud_product'
                      min: 
                        type: integer
                      max:
                        type: integer
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'

  '/{portal}/order/server/storage':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS서버 데이터 조회 #GetOrderServerStorage'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 서비스에 사전정의된 서버 모듈 정보들을 조회합니다. 해당 정보들은 서버의 실제 코드들도 내포되어 있습니다. (입력 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderServerStorage
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: license-id 
          schema:
            type: string
            example: 'q=license-id%3D{LicenseID}'
          required: true
        - in: query
          name: cloud-id 
          schema:
            type: string
            example: 'q=cloud-id%3D{CloudID}'
          required: true
        - in: query
          name: system 
          schema:
            type: string
            example: 'q=system%3D{System구분자}'
          required: true
      responses:
        '200':
          description: 'Server 데이터 정보 모두 조회'
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_storage:
                    type: object
                    properties:
                      storage:
                        type: object
                        properties:
                          recommand_volume:
                            type: integer
                          create_num:
                            type: integer
                          cloud_storage:
                            $ref: '#/components/schemas/cloud_storage'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
          
  '/{portal}/order/server':
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (2.제품구성): SaaS서버 주문 등록 #PostOrderServer'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> SaaS 서버 주문 정보 저장 이벤트'
      operationId: PostOrderServer 
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        server: 
                          type: object
                          properties:
                            system_type:
                              type: string
                            system:
                              type: object
                              allOf:
                                - $ref: '#/components/schemas/server_instance_info'
                            storage:
                              type: array
                              items:
                                type: object
                                allOf:
                                  - $ref: '#/components/schemas/storage_instance_info'
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '400':
          $ref: '#/components/responses/badRequest'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/acg':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (3.검토): ACG 데이터 조회 #GetOrderAcg'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 각 서비스에 부합하는 네트워크 정책 정보들을 조회합니다. (이 데이터는 주문정보에 저장됩니다.)'
      operationId: GetOrderAcg
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: query
          name: service_id 
          schema:
            type: string
            example: 'q=service_id%3D{ServiceID or AddServiceID}'
        - in: query
          name: service_type 
          schema:
            type: string
            example: 'q=service_type%3D{ServiceType}'
      responses:
        '200':
          description: 'ACG - 해당 서비스 모든 정보 조회'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  acg:
                    type: array
                    items:
                      $ref: '#/components/schemas/acg'
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (3.검토): ACG 신청정보 등록 #PostOrderAcg'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> ACG의 모든 정책 정보를 주문 정보 테이블에 저장합니다.'
      operationId: PostOrderAcg
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/order_header'
                - type: object
                  properties:
                    order_info:
                      type: object
                      properties:
                        acg:
                          type: array
                          items:
                            $ref: '#/components/schemas/acg'
      responses:
        '201':
          description: '주문 이력 등록 완료'
        '409':
          $ref: '#/components/responses/conflict'

  '/{portal}/order/his':
    get:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (3.검토): 상품 신청정보 조회 #GetOrderHis'
      description: '\- 서비스포털 -> API Gateway -> Configurator <br> 주문 모든 데이터 정보를 조회합니다.'
      operationId: GetOrderHis
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
        - in: query
          name: product-list-seq
          schema: 
            type: string 
            example: 'q=product-list%3D{ProductListSeq}'
      responses:
        '200':
          description: '주문 전체 정보'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  cloud_id:
                    type: string
                  product_id: 
                    type: string
                  service_id:
                    type: string
                  license:
                    type: object
                  add_service:
                    type: array
                    items:
                      type: string
                  autoscale:
                    type: object
                  config: 
                    type: array
                    items:
                      type: object
                  server:
                    type: array
                    items:
                      type: object
                  acg:
                    type: array
                    items:
                      type: object
  
  '/{portal}/meta/product/create':
    post:
      tags: 
        - '2. 생성'
      summary: '2.1.1 SaaS 신청 (4.생성시작): SaaS 생성 시작 명령 #PostMetaProductCreate'
      description: '\- 서비스포털 -> API Gateway -> MetadataManager <br> (Operation) 주문이력을 기준으로 제품생성을 시작 명령 : 테넌트 ID, 제품 리스트 SEQ 필요'
      operationId: PostMetaProductCreate
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/seq'
              description: '제품 리스트 SEQ 삽입'
      responses:
        '202':
          description: '제품 생성 검토 성공 및 생성 요청 완료 <br> 제품 생성 요청상태이므로, 실제 생성된 상태가 아닙니다.'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'

### Terraform 연동 시 작성 예정
  '/build/tf/db/apply':
    post:
      tags:
        - '2. 생성'
      summary: '[작성예정] 2.1.2 SaaS 신청 (4.생성시작): SaaS 제품 생성 검토요청 #PostBuildTfDbPlan'
      operationId: PostBuildTfDbPlan
      responses:
        '200':
          description: ''
  '/build/tf/db/plan':
    post:
      tags:
        - '2. 생성'
      summary: '[작성예정] 2.1.2 SaaS 신청 (4.생성시작): SaaS 제품 생성요청 #PostBuildTfDbApply'
      operationId: PostBuildTfDbApply
      responses:
        '200':
          description: ''
  '/meta/product/system':
    put:
      tags:
        - '2. 생성'
      summary: '[작성예정] 2.1.2 SaaS 신청 (4.생성시작): SaaS 제품 시스템 상태 업데이트 요청 #PatchMetaProduct'
      operationId: PatchMetaProduct
      responses:
        '200':
          description: ''
  '/{portal}/meta/product':
    get:
      tags:
        - '2. 생성'
      summary: '[작성예정] 2.1.2 SaaS 신청: SaaS 상품 조회 #GetMetaProduct'
      security:
        - bearerAuth: []
      parameters:
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: ''

##### 3. 인증
  '/adm/gatekeeper/login':
    post:
      tags:
        - 3. 인증
      operationId: PostCloudAdminLogin
      summary: '3.1.3 클라우드 관리자 로그인 인증 : 로그인 확인 및 토큰발급 #PostCloudAdminLogin'
      description: '\- ID, PASSWORD의 Validation을 체크하고, 토큰발급을 수행 : 관리 포털 -> API Gateway -> GateKeeper -> Provider'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
              - id
              - password
              properties:
                id:
                  type: string
                  example: 'id@hsck.com'
                  description: 'Domain 형태'
                password:
                  type: string
                  example: '124K8t9iHn!'
                  description: 'Password'
      responses:
        '200':
          description: >
            # Token
            
            ## Header
              {
                "alg": "HS256",
                "typ": "JWT"
              }
              
            ## Body
              {
                iss: hanssak-cloud.com
                exp: '1485270000000'
                tenent: xxxx
                group: develop
                auth: manager
                id: kng
              }
            
            ## Verify signature
            
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: '...'
                  refresh_token:
                    type: string
                    example: '...'
        '400':
          $ref: '#/components/responses/badRequest'
  '/svc/gatekeeper/login':
    post:
      tags:
        - 3. 인증
      operationId: PostSaasAdminLogin
      summary: '3.1.4 SaaS 관리자 로그인 인증 : 로그인 확인 및 토큰발급 #PostSaasAdminLogin'
      description: '\- ID, PASSWORD의 Validation을 체크하고, 토큰발급을 수행 : 서비스 포털 -> API Gateway -> GateKeeper -> Provider'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
              - tenant_id
              - id
              - password
              properties:
                tenant_id:
                  type: string
                id:
                  type: string
                  example: 'id@hsck.com'
                  description: 'Domain 형태'
                password:
                  type: string
                  example: '124K8t9iHn!'
                  description: 'Password'
      responses:
        '200':
          description: >
            # Token
            
            ## Header
              {
                "alg": "HS256",
                "typ": "JWT"
              }
              
            ## Body
              {
                iss: hanssak-cloud.com
                exp: '1485270000000'
                tenent: xxxx
                group: develop
                auth: manager
                id: kng
              }
            
            ## Verify signature
            
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: '...'
                  refresh_token:
                    type: string
                    example: '...'
        '400':
          $ref: '#/components/responses/badRequest'
               
  '/{portal}/gatekeeper/logout':
    post:
      tags:
        - "3. 인증"
      summary: '3.2.1 로그아웃 #PostPortalLogout'
      description: "- 관리,서비스 포털의 유저 계정을 로그아웃할때 사용한다. 로그아웃 시 토큰이 반납처리 된다."
      operationId: PostPortalLogout
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        description: "id는 UserID"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id'
        required: true    
      responses:
        '200':
          description: '로그아웃 성공'
        '400':
          $ref: '#/components/responses/badRequest'
  
  
##### 4. 고객사 관리
  '/adm/manage/member':
    post:
      tags:
        - "1. 신청"
        - "4. 고객사 관리"
      summary: '1.2.2 4.1.1 고객사 등록: 테넌트 생성 #PostManageMember' 
      description: '\- 테넌트 생성 신청: 외부 API -> API Gateway -> SaaS Manager <br> required를 필수로 지켜야 합니다. 또한 등록 성공 시 SaaS DB가 생성됩니다.'
      operationId: PostManageMember
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_member'
        required: true
      responses:
        '201':
          description: '테넌트 생성 성공'
          content:
            application/json:
              schema: 
                allOf:
                  - $ref: '#/components/schemas/seq'
                  - $ref: '#/components/schemas/member_tenant'
                  - $ref: '#/components/schemas/member_company'
        '400':
          $ref: '#/components/responses/badRequest'
    get:
      tags:
        - "4. 고객사 관리"
      summary: '4.4.1 고객사 전체 조회 #GetManageMembers'
      description: '\- 테넌트 전체 조회: 외부 API -> API Gateway -> SaaS Manager '
      operationId: GetManageMembers
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '테넌트 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/get_member'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'  

  '/{portal}/manage/member/{tenant_id}':
    put:
      tags:
        - "4. 고객사 관리"
      summary: '4.2.1 고객사 대량 업데이트 : 테넌트 변경 #PutManageMember'
      description: '\- 테넌트 정보 변경: SaaS Manager와 연동'
      operationId: PutManageMember
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'    
        - name: tenant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_member'
        required: true
      responses:
        '200':
          description: '테넌트 업데이트 성공'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      tags:
        - "4. 고객사 관리"
      summary: '4.3.1 고객사 삭제: 테넌트 반납 #DeleteManageMember' 
      description: '\- 테넌트 반납 신청: 외부 API -> API Gateway -> SaaS Manager <br> 반납 성공 시 SaaS DB 휴먼상태로 전환 하게 됩니다.'
      operationId: DeleteManageMember
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: tenant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_tenant_id'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '테넌트 삭제 성공'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
    get:
      tags:
        - "1. 신청"
        - "4. 고객사 관리"
      summary: '1.2.2 4.4.1 고객사 특정 테넌트 조회 #GetManageMember'
      description: '\- 특정 테넌트 조회: 외부 API -> API Gateway -> SaaS Manager <br> 조회 기준은 URL {고객사 테넌트ID}기준으로 지칭'
      operationId: GetManageMember
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - name: tenant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_tenant_id'    
      responses:
        '200':
          description: '테넌트 조회 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_member'    
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'

  '/adm/manage/admin':
    post:
      tags:
        - "5. 사용자 관리"
      summary: '5.1.1 클라우드 관리자 생성 #PostManageAdmin' 
      description: '\- 클라우드 관리자 생성: 외부 API -> API Gateway -> SaaS Manager <br> 관리자 생성 파트는 클라우드 Root 관리자를 생성하는 메세지입니다.'
      operationId: PostManageAdmin
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_admin'
        required: true
      responses:
        '201':
          description: '관리자 생성 성공'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/seq'
        '400':
          $ref: '#/components/responses/badRequest'
    get:
      tags:
        - "5. 사용자 관리"
      summary: '5.4.1 클라우드 관리자 전체 조회 #GetManageAdmin'
      description: '\- 관리자 전체 조회: 외부 API -> API Gateway -> SaaS Manager '
      operationId: GetManageAdmins
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '관리자 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/get_admin'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
  '/adm/manage/admin/{user_id}':
    put:
      tags:
        - "5. 사용자 관리"
      summary: '5.2.1 클라우드 관리자 정보 업데이트 #PutManageAdmin'
      description: '\- 특정 관리자 정보 업데이트 : 외부 API -> API Gateway -> SaaS Manager'
      operationId: PutManageAdmin
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_admin'
        required: true
      responses:
        '200':
          description: '테넌트 업데이트 성공'
        '404':
          $ref: '#/components/responses/notFound'

    delete:
      tags:
        - "5. 사용자 관리"
      summary: '5.3.1 클라우드 관리자 삭제 #DeleteManageAdmin' 
      description: '\- 특정 관리자 삭제 : 외부 API -> API Gateway -> SaaS Manager'
      operationId: DeleteManageAdmin
      security:
        - bearerAuth: []
      parameters: 
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
      responses:
        '200':
          description: '관리자 계정 삭제 성공'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
    get:
      tags:
        - "5. 사용자 관리"
      summary: '5.4.1 클라우드 관리자 조회 #GetManageAdmin'
      description: '\- 클라우드 관리자 ID로 조회: 외부 API -> API Gateway -> SaaS Manager'
      operationId: GetManageAdmin
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
      responses:
        '200':
          description: '테넌트 조회 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/admin' 
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'  
      
  '/{portal}/manage/saas-admin':
    post:
      tags:
        - "1. 신청"
        - "5. 사용자 관리"
      summary: '1.2.2 5.6.1 서비스포털 관리자 생성 #PostManageSaasAdmin' 
      description: '\- 서비스포털 관리자 생성: 외부 API -> API Gateway -> SaaS Manager <br> 회원가입 또는 클라우드 관리자가 서비스 관리자를 추가할수 있습니다.'
      operationId: PostManageSaasAdmin
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_saas_admin'
        required: true
      responses:
        '201':
          description: '관리자 생성 성공'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/seq'
        '400':
          $ref: '#/components/responses/badRequest'
    get:
      tags:
        - "5. 사용자 관리"
      summary: '5.8.1 서비스 관리자 전체 조회 #GetManageSaasAdmin'
      description: '\- 관리자 전체 조회: 외부 API -> API Gateway -> SaaS Manager '
      operationId: GetManageSaasAdmins
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'    
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      responses:
        '200':
          description: '관리자 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/get_saas_admin'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
          
  '/{portal}/manage/saas-admin/{user_id}':
    put:
      tags:
        - "5. 사용자 관리"
      summary: '5.6.1 서비스 관리자 정보 업데이트 #PutManageSaasAdmin'
      description: '\- 특정 서비스 관리자 정보 업데이트 : 외부 API -> API Gateway -> SaaS Manager'
      operationId: PutManageSaasAdmin
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'    
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_saas_admin'
        required: true
      responses:
        '200':
          description: '업데이트 성공'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      tags:
        - "5. 사용자 관리"
      summary: '5.7.1 서비스 관리자 삭제 #DeleteManageSaasAdmin' 
      description: '\- 특정 서비스 관리자 삭제 : 외부 API -> API Gateway -> SaaS Manager'
      operationId: DeleteManageSaasAdmin
      security:
        - bearerAuth: []
      parameters: 
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'    
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
      responses:
        '200':
          description: '관리자 계정 삭제 성공'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
    get:
      tags:
        - "5. 사용자 관리"
      summary: '5.8.1 서비스 관리자 조회 #GetManageSaasAdmin'
      description: '\- 서비스 관리자 ID로 조회: 외부 API -> API Gateway -> SaaS Manager'
      operationId: GetManageSaasAdmin
      security:
        - bearerAuth: []
      parameters: 
        - in: header
          name: Authorization
          required: true
          schema:
            $ref: '#/components/schemas/parameter_token'
        - in: header
          name: X-TenantId
          schema:
            $ref: '#/components/schemas/parameter_x_tenant_id'
        - name: portal
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/parameter_portal'    
        - name: user_id
          in: path
          required: true
          description: '관리자 계정'
          schema:
            type: string
      responses:
        '200':
          description: '사용자 조회 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_saas_admin' 
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'

      
components:
  # --> 보안 스키마 정의 
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT Authoriztion header using the Bearer scheme"

  # --> 응답 컴포넌트 정의
  responses:
    badRequest:
      description: '400: 없는 필드 요청으로 에러 발생 (Field validation 실패)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    unauthorized:
      description: '401: API인증 실패 (token is missing or invalid)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    forbidden:
      description: '403: 인증에 성공했지만, 인증된 사용자 리소스에 엑세스 할 수 없는 에러'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    notFound:
      description: '404: 리소스 찾을수 없음'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    conflict:
      description: '409: 리소스 충돌 발생'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
    
  # --> 데이터 스키마 정의
  schemas:
    error_response:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        message:
          type: string
      required: 
        - status
        - code
        - message

### DB: Common Object
    base_code:
      type: object
      properties:
        base:
          type: string
        key:
          type: string  
        value:
          type: string
    product:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            description:
              type: string
    service:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            product_id:
              type: string
            description:
              type: string
    add_service:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            plan:
              type: string
            price:
              type: integer
            description:
              type: string
    cloud:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            restriction:
              type: object
              description: '제약사항'
            add_info:
              type: object
              description: '부가 정보'
    cloud_os:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            cloud_id: 
              type: string
            cloud_os_code:
              type: string
            os:
              type: string
            add_info:
              type: object
    cloud_product:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            cloud_id:
              type: string
            cloud_server_product_code:
              type: string
            platform:
              type: string
            category:
              type: string
            gpu:
              type: integer
            cpu:
              type: integer
            memory:
              type: integer
            disk:
              type: string
            storage_type:
              type: string
            add_info:
              type: object
    cloud_storage:
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            cloud_id:
              type: string
            type:
              type: string
            disk_type:
              type: string
            min_volume:
              type: integer
            max_volume:
              type: integer
            add_info:
              type: string
    license:
      description: '(Base) 제품 라이선스 관련 오브젝트'
      allOf:
        - $ref: '#/components/schemas/id'
        - $ref: '#/components/schemas/license_plan'
        - type: object
          properties:
            product_id:
              type: string
            service_id:
              type: string
            grade:
              type: string
            description:
              type: string
            group:
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
          required:
            - "id"
    license_plan:
      type: object
      properties:
        plan:
          type: string
        price:
          type: integer
      required:
        - "plan"
    autoscale:
      description: '(Base) AutoScale 정책 오브젝트'
      allOf:
        - $ref: '#/components/schemas/id'
        - type: object
          properties:
            type:
              type: string
            policy:
              type: object
            description:
              type: string
    acg: 
      description: '(Base) ACG'
      type: object
      properties:
        acg_id:
          type: string
        service_type:
          type: string
        service_id:
          type: string
        system:
          type: string
        acg_rule:
          type: array 
          items:
            $ref: '#/components/schemas/acg_rule'
    acg_rule:
      description: '(Base) ACG Rule'
      type: object
      properties:
        direction:
          type: string
          description: '방향'
          example: 'INBOUND or OUTBOUND' 
        protocol:
          type: string
        source_type:
          type: string
        source:
          type: string
        ports:
          type: string
        description:
          type: string
        add_info:
          type: object
    form_header:
      type: object
      description: '서비스 제품 구성 시 사용되는 Container 폼 오브젝트'
      properties:
        title:
          type: string
          description: '폼의 타이틀 문구'
        horizontal_index:
          type: integer
        vertical_index:
          type: integer
    private_network_vpc_get_info:
      type: object
      properties:
        info:
          type: array 
          description: 'VPC 정보'
          items:
            type: object
            properties:
              code:
                type: string
              name: 
                type: string
              network_range:
                type: string
              add_info:
                type: string
    private_network_subnet_get_info:
      type: object
      properties:
        info:
          type: array 
          description: 'VPC 정보'
          items:
            type: object
            properties:
              code:
                type: string
              name: 
                type: string
              network_range:
                type: string
              vpc_code:
                type: string  
              add_info:
                type: string        
        
    server_network_info: 
      type: object
      properties:
        cloud_vpc_code: 
          type: string
        cloud_vpc_network_range:
          type: string
        cloud_subnet_code:
          type: string
        cloud_subnet_network_range:
          type: string
    server_instance_info:
      type: object
      properties:
        cloud_os_id: 
          type: string
        cloud_product_id:
          type: string
        min: 
          type: integer
        max:
          type: integer
    storage_instance_info:
      type: object
      properties:
        cloud_storage_id:
          type: string
        volume:
          type: integer
        create_num:
          type: integer

### DB: Admin Object
    post_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/userid'
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            cloud_private_key:
              type: string
            cloud_public_key:
              type: string
            key_expire_date:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
          required:
            - "grade"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"
    get_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/userid'
        - type: object
          properties:
            grade:
              type: string
            cloud_private_key:
              type: string
            cloud_public_key:
              type: string
            key_expire_date:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
            update_time:
              type: string
              format: "YYYYMMDDhhmmss"
            registration_date:
              type: string
              format: "YYYYMMDD"  
          required:
            - "grade"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"        
    put_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            cloud_private_key:
              type: string
            cloud_public_key:
              type: string
            key_expire_date:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
          required:
            - "grade"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"        
    admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/seq'
        - $ref: '#/components/schemas/userid'
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            cloud_private_key:
              type: string
            cloud_public_key:
              type: string
            key_expire_date:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
            update_time:
              type: string
              format: "YYYYMMDDhhmmss"
            registration_date:
              type: string
              format: "YYYYMMDD"  
          required:
            - "grade"
            - "cloud_private_key"
            - "cloud_public_key"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"        
    get_member:
      description: '고객사 정보'
      allOf:
        - $ref: '#/components/schemas/member_tenant'
        - $ref: '#/components/schemas/member_company'
        - type: object
          properties:
            manager_name:
              type: string
            manager_department:
              type: string
            manager_position:
              type: string
            manager_rank:
              type: string
            status:
              type: string
            email: 
              type: string
            phone:
              type: string
            database_info:
              type: object
            user_info:
              type: object
            payment_info:
              type: object
            add_info:
              type: object
            update_time:
              type: string
            registration_date:
              type: string
    post_apply_member:
      description: '고객사 생성 신청'
      allOf:
        - $ref: '#/components/schemas/member_tenant'
        - $ref: '#/components/schemas/member_company'
        - type: object
          properties:
            manager_name:
              type: string
            manager_department:
              type: string
            manager_position:
              type: string
            manager_rank:
              type: string
            email: 
              type: string
            phone:
              type: string
            payment_info:
              type: object
            add_info:
              type: object
          required:
            - tenant_id
            - manager_name
            - email
            - phone   
    post_member:
      description: '고객사 생성'
      allOf:
        - $ref: '#/components/schemas/tenant_id'
        - $ref: '#/components/schemas/member_company'
        - type: object
          properties:
            manager_name:
              type: string
            manager_department:
              type: string
            manager_position:
              type: string
            manager_rank:
              type: string
            email: 
              type: string
            phone:
              type: string
            payment_info:
              type: object
            add_info:
              type: object
          required:
            - manager_name
            - email
            - phone        
    put_member:
      description: '고객사 SEQ'
      allOf:
        - $ref: '#/components/schemas/member_company'
        - type: object
          properties:
            manager_name:
              type: string
            manager_department:
              type: string
            manager_position:
              type: string
            manager_rank:
              type: string
            status:
              type: string
            email: 
              type: string
            phone:
              type: string
            payment:
              type: object
            add_info:
              type: object
          required:
            - manager_name
            - email
            - phone                
    member_tenant:
      type: object
      properties:
        tenant_id:
          type: string
    member_company:
      type: object
      properties:
        company:
          type: string
      required:
        - "company"
    order_header:
      type: object
      allOf:
        - type: object
          properties:
            product_list_seq:
              type: integer
            step:
              type: string


### Cloud 연동 오브젝트
    post_ncp_psql_database:
      type: object
      properties:
        database_name:
          type: string
        owner:
          type: string
      required:
        - database_name
        - owner

### DB: SaaS Object
    post_apply_saas_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/tenant_id'
        - $ref: '#/components/schemas/userid'
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            name: 
              type: string
            department:
              type: string
            position:
              type: string
            rank:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
          required:
            - "grade"
            - "name"
            - "status"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"
    post_saas_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/userid'
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            name: 
              type: string
            department:
              type: string
            position:
              type: string
            rank:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
          required:
            - "grade"
            - "name"
            - "status"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"
    get_saas_admin:
      description: '관리자 SEQ'
      allOf:
        - $ref: '#/components/schemas/userid'
        - type: object
          properties:
            grade:
              type: string
            name: 
              type: string
            department:
              type: string
            position:
              type: string
            rank:
              type: string
            status:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
            update_time:
              type: string
            registration_date:
              type: string
    put_saas_admin:
      allOf:
        - $ref: '#/components/schemas/password'
        - type: object
          properties:
            grade:
              type: string
            name: 
              type: string
            department:
              type: string
            position:
              type: string
            rank:
              type: string
            status:
              type: string
            email:
              type: string
            phone:
              type: string
            ip_check:
              type: boolean
            mac_check:
              type: boolean
          required:
            - "grade"
            - "name"
            - "status"
            - "email"
            - "phone"
            - "ip_check"
            - "mac_check"    
            
### Commen Properties Object 
    id:
      type: object
      properties:
        id:
          type: string
      required:
        - "id"
    seq:
      type: object
      properties:
        seq: 
          type: integer      
    tenant_id:
      type: object
      properties:
        tenant_id:
          type: string
      required:
        - "tenant_id"      
    userid:
      type: object
      properties:
        userid:
          type: string
      required:
        - "userid"
    password:
      type: object
      properties:
        password:
          type: string
      required:
        - "password"
    noti:
      type: object
      description: '#oNoti 현재 Payload만 구성됨 --> MQ, REST 쓸지 정해지지 않음'
      required: 
        - type
        - from
        - to
        - msg
      properties:
        type: 
          type: string
          description: '알림 타입: kakao, email, phone'
          default: 'email'
        from:
          type: string
          description: '발신자 주소'
          default: 'hsck@hsck.com'
        to:
          type: string
          description: '수신자 주소'
          default: 'user@company.com'
        msg:
          type: string
          description: '메세지 내용'
 
## parameter Common ID
    parameter_company_name:
      type: string
      example: 'Company Name'
    parameter_service_id:
      type: string
      example: 'Service ID'
    parameter_token:
      type: string
      example: 'JWT Token'
    parameter_tenant_id:
      type: string
      example: 'Tenant ID'
    parameter_x_tenant_id:
      type: string
      example: '관리 포탈만 설정. Tenant ID'  
    parameter_portal:
      type: string
      example: '포탈 구분. 관리(adm), 서비스(svc)'
    parameter_vendor:
      type: string
      example: '클라우드 벤더 (ncp, azu, aws)'

## Unused       
   # vpc:
   #   type: object
   #   description: 'VPC 객체 (Cloud Broker와 연동)'
   #   properties:
   #     id:
   #       type: string
   #       description: 'VPC 고유 번호'
   #       example: '***04'
   #     name:
   #       type: string
   #       description: 'VPC 이름'
   #       example: 'test-***'
   #     ipv4_cidr_block:
   #       type: string
   #       description: 'VPC 네트워크 대역'
   #       example: '***.***.0.0/16'
   #     status:
   #       type: string
   #       description: 'VPC 상태'
   #     region:
   #       type: string
   #       description: 'VPC RegionCode'
   #       example: 'KR'        
   # subnet:
   #   type: object
   #   description: 'Subnet 객체 (Cloud Broker와 연동)'
   #   properties:
   #     id:
   #       type: string
   #       description: 'Subnet 고유 번호'
   #       example: '***04'
   #     vpc_id:
   #       type: string
   #       description: 'Subnet이 속한 Vpc 고유번호'
   #     name:
   #       type: string
   #       description: 'Subnet 이름'
   #       example: 'test-***'
   #     ipv4_cidr_block:
   #       type: string
   #       description: 'VPC 네트워크 대역'
   #       example: '***.***.0.0/16'
   #     status:
   #       type: string
   #       description: 'VPC 상태'
   #     zone:
   #       type: string